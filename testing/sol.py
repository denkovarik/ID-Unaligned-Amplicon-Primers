# This file contains expected solutions to tests in testing files
import io
import os, sys, inspect
import unittest
# Get the current and parent folder that files are located in
currentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))
parentdir = os.path.dirname(currentdir)
sys.path.insert(0, parentdir)
from classes.Primer import Primer
from classes.Reverse_Primer import Reverse_Primer
from classes.Forward_Primer import Forward_Primer
from classes.Sequence import Sequence
from classes.Amplicon import Amplicon


# Solution for Forward_Primer.sort() test
forward_primer_sort_exp = [Forward_Primer("AAGTCGTGATTCCATCACTTCTGTGT",43),Forward_Primer("AAGTGTAAGTTAGGACCTGGGAGGA",54),Forward_Primer("AATGCACATTCATAAAGCTATTTGAAGAAATCTTC",18),Forward_Primer("ACAACCACAACAGACTGGAGACG",16),Forward_Primer("ACAAGATCTTCGTTCAGGGCATCAT",48),Forward_Primer("ACCATCACGGACGTCATCAACATT",46),Forward_Primer("ACTCTCTCGTGCTCTGTTATCTGTGTAT",21),Forward_Primer("ACTGGCTCTGTTACTGGTGCTG",23),Forward_Primer("ACTTTTTAACTTGCTCAAAACAAAAACAAAAACAAA",5),Forward_Primer("AGATCTTACTTCCCGGGTGTTTAATGG",27),Forward_Primer("AGATTTAAGCCTGAGGAGCTTAGTGC",1),Forward_Primer("AGCCAGGGACCAATGGCC",47),Forward_Primer("AGCTTGGTGGAAGGATCAGGTG",8),Forward_Primer("AGGTAGTGATTGGATGTGTTAGTGTTTGT",28),Forward_Primer("AGTAAAAAGATCAAGGGTTTATGATTTGAAACTTTA",33),Forward_Primer("AGTCTGTCTTACCTGACCACCCAT",0),Forward_Primer("AGTTTCATCCCAGATTCTAACTTTCATTCTCT",29),Forward_Primer("ATTCCGATCCAGTCACACTATCATCAG",19),Forward_Primer("CAATCACATGTGCCCTCTGCTTTAG",59),Forward_Primer("CACAGCCTATTCAGAACACCAATAGTCT",57),Forward_Primer("CAGCTCACTCAGGGCCTCC",44),Forward_Primer("CATCTTGGGATGGTGTTTCTTCATTAATAGG",7),Forward_Primer("CCATGGTCATCGGAGGCTATGC",53),Forward_Primer("CCCAGTTCCAGGAGGTCTACCT",14),Forward_Primer("CCCATGCCTGACAAGTACTCCTTAGA",49),Forward_Primer("CCTATTTCCCCATCAGAAGCAGCAAAA",10),Forward_Primer("CTAACATCCCATGAACAGACCATAAAGC",3),Forward_Primer("CTTGAAAGGTAGTTACCTGTATTTACTAAAATCTTT",39),Forward_Primer("GAAAGCCAAGATCCACTACCGGA",55),Forward_Primer("GACTGTTTGATTTCTTCATTTAATTCTGTACAACAG",20),Forward_Primer("GCAGCTTTTGGAGTGGTTTTCATGT",32),Forward_Primer("GCATGACAAAGGCCTGTGAAGG",34),Forward_Primer("GCCAAGTGCAGTGAGAAACCTATTCT",24),Forward_Primer("GCCTGTGTAATTCTTTCCGGTGATC",42),Forward_Primer("GCTGAGGCTGCGGCCTCT",45),Forward_Primer("GCTTGTGTGAAAAAATACCCTCTGACTG",36),Forward_Primer("GGAGAAGGGGGAGATGTTGAGCA",56),Forward_Primer("GGAGGGCCAAACTGTGTAGCT",31),Forward_Primer("GGATATCATTTGGGTGAAACTTGGGAAC",38),Forward_Primer("GGGGATAAGGCGGCCGACA",25),Forward_Primer("GGTGCAGAAGGGACTGCCG",35),Forward_Primer("GGTTACCTGTGGCACCTCTACC",58),Forward_Primer("GTGAAAAGGACCCCACGAAGTGT",50),Forward_Primer("GTGCTGAACCTGGGGGCA",13),Forward_Primer("TAGTTAACTTTTATGTTTGTGTAGTGAAACTTACAG",30),Forward_Primer("TATTTAGAGACATTTAATAGAAGTGTTGAGCAAAAG",12),Forward_Primer("TCAATGGCTCCTTCAAACCTAACAGAT",11),Forward_Primer("TCATCTGCACTGCCCACTTCAC",37),Forward_Primer("TCATTCCCACCACAAAACCAGAAATAAAAA",9),Forward_Primer("TCCTAGGTTTTAAATGTAATTGCTTTTTCTTTCTTT",26),Forward_Primer("TCTCCCTGGAAGCAAATCCCTTTC",17),Forward_Primer("TCTTTGATTAAGTAAAAGCAGACATGGGAAC",2),Forward_Primer("TGACTGGAGGAGTCTGGAGTCTAG",52),Forward_Primer("TGATCTTTGACTTGAAGAAGTCCGTACA",22),Forward_Primer("TGCACATAACAAAAGAATATTTGTAAAGCCATC",6),Forward_Primer("TGCGATTGCTAACACTTGACCGAA",41),Forward_Primer("TGCTGTTGTCTTTCACCCAAAATTTGTT",51),Forward_Primer("TGGTACTGGTGGAGGGGCA",4),Forward_Primer("TGTGGCTTTGATTCGGAGTGTCT",40),Forward_Primer("TTTTGGCTTTCACGGTTTCCTCTG",15),]
